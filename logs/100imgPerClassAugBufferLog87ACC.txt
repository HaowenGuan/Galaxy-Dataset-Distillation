ssh://sbcaesar@dais10.uwb.edu:22/data/sbcaesar/xuan_venv/bin/python3 -u /data/sbcaesar/mac_galaxy/buffer.py
Generated Augmented Train Set of 16000 images.
Processed Test Set of 16000 images.
Hyper-parameters:
 {'dataset': 'gzoo2', 'subset': 'imagenette', 'model': 'ConvNet', 'num_experts': 10, 'lr_teacher': 0.001, 'batch_train': 256, 'batch_real': 256, 'dsa': True, 'dsa_strategy': 'color_crop_cutout_flip_scale_rotate', 'data_path': 'data', 'buffer_path': '/data/sbcaesar/galaxy_buffers', 'train_epochs': 30, 'zca': False, 'decay': False, 'mom': 0, 'l2': 0, 'save_interval': 10, 'device': 'cuda', 'dsa_param': <utils.ParamDiffAug object at 0x7f59aceba910>}
BUILDING DATASET
100%|█████████████████████████████████| 16000/16000 [00:00<00:00, 138946.35it/s]
16000it [00:00, 3982485.55it/s]
class c = 0: 1600 real images
class c = 1: 1600 real images
class c = 2: 1600 real images
class c = 3: 1600 real images
class c = 4: 1600 real images
class c = 5: 1600 real images
class c = 6: 1600 real images
class c = 7: 1600 real images
class c = 8: 1600 real images
class c = 9: 1600 real images
real images channel 0, mean = -0.0499, std = 0.9501
real images channel 1, mean = -0.0381, std = 0.9780
real images channel 2, mean = -0.0345, std = 0.9753
Add weight to loss function tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
DC augmentation parameters:
 {'crop': 4, 'scale': 0.2, 'rotate': 45, 'noise': 0.001, 'strategy': 'crop_scale_rotate'}
ConvNet(
  (features): Sequential(
    (0): Conv2d(3, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (1): GroupNorm(128, 128, eps=1e-05, affine=True)
    (2): ReLU(inplace=True)
    (3): AvgPool2d(kernel_size=2, stride=2, padding=0)
    (4): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (5): GroupNorm(128, 128, eps=1e-05, affine=True)
    (6): ReLU(inplace=True)
    (7): AvgPool2d(kernel_size=2, stride=2, padding=0)
    (8): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (9): GroupNorm(128, 128, eps=1e-05, affine=True)
    (10): ReLU(inplace=True)
    (11): AvgPool2d(kernel_size=2, stride=2, padding=0)
  )
  (classifier): Linear(in_features=32768, out_features=10, bias=True)
)
Itr: 0	Epoch: 0	Train Acc: 0.408125	Test Acc: 0.575	AVG Train loss: 1.8253563318252564	AVG Test loss: 1.4354824686050416
Itr: 0	Epoch: 1	Train Acc: 0.5596875	Test Acc: 0.62	AVG Train loss: 1.426540976524353	AVG Test loss: 1.2050703239440919
Itr: 0	Epoch: 2	Train Acc: 0.6139375	Test Acc: 0.65	AVG Train loss: 1.24647638130188	AVG Test loss: 1.0620919489860534
Itr: 0	Epoch: 3	Train Acc: 0.623375	Test Acc: 0.665	AVG Train loss: 1.158139012336731	AVG Test loss: 1.0692455244064332
Itr: 0	Epoch: 4	Train Acc: 0.653875	Test Acc: 0.705	AVG Train loss: 1.0727756328582763	AVG Test loss: 0.9249776077270507
Itr: 0	Epoch: 5	Train Acc: 0.66575	Test Acc: 0.695	AVG Train loss: 1.0354683542251586	AVG Test loss: 0.9129848527908325
Itr: 0	Epoch: 6	Train Acc: 0.665125	Test Acc: 0.72	AVG Train loss: 1.0095880432128905	AVG Test loss: 0.8704866886138916
Itr: 0	Epoch: 7	Train Acc: 0.657625	Test Acc: 0.735	AVG Train loss: 1.025344509124756	AVG Test loss: 0.8383256101608276
Itr: 0	Epoch: 8	Train Acc: 0.691625	Test Acc: 0.74	AVG Train loss: 0.9345458045005798	AVG Test loss: 0.8195762538909912
Itr: 0	Epoch: 9	Train Acc: 0.695625	Test Acc: 0.73	AVG Train loss: 0.9221808452606202	AVG Test loss: 0.8004197597503662
Itr: 0	Epoch: 10	Train Acc: 0.7175	Test Acc: 0.735	AVG Train loss: 0.8649130067825317	AVG Test loss: 0.8010353517532348
Itr: 0	Epoch: 11	Train Acc: 0.7103125	Test Acc: 0.725	AVG Train loss: 0.8703862485885621	AVG Test loss: 0.8195476222038269
Itr: 0	Epoch: 12	Train Acc: 0.7295	Test Acc: 0.74	AVG Train loss: 0.8165633101463318	AVG Test loss: 0.8143005895614625
Itr: 0	Epoch: 13	Train Acc: 0.704625	Test Acc: 0.74	AVG Train loss: 0.8770829868316651	AVG Test loss: 0.7316270613670349
Itr: 0	Epoch: 14	Train Acc: 0.71125	Test Acc: 0.75	AVG Train loss: 0.8607128953933716	AVG Test loss: 0.7319123458862304
Itr: 0	Epoch: 15	Train Acc: 0.741875	Test Acc: 0.745	AVG Train loss: 0.7784801397323609	AVG Test loss: 0.7521823191642761
Itr: 0	Epoch: 16	Train Acc: 0.7509375	Test Acc: 0.745	AVG Train loss: 0.7504218101501465	AVG Test loss: 0.7633093190193176
Itr: 0	Epoch: 17	Train Acc: 0.7301875	Test Acc: 0.745	AVG Train loss: 0.8087888827323914	AVG Test loss: 0.7298209476470947
Itr: 0	Epoch: 18	Train Acc: 0.74075	Test Acc: 0.74	AVG Train loss: 0.7784206867218018	AVG Test loss: 0.7638374996185303
Itr: 0	Epoch: 19	Train Acc: 0.7595	Test Acc: 0.745	AVG Train loss: 0.7376441836357117	AVG Test loss: 0.6894968891143799
Itr: 0	Epoch: 20	Train Acc: 0.76425	Test Acc: 0.77	AVG Train loss: 0.7168744974136353	AVG Test loss: 0.6959172487258911
Itr: 0	Epoch: 21	Train Acc: 0.7550625	Test Acc: 0.76	AVG Train loss: 0.734211829662323	AVG Test loss: 0.746972165107727
Itr: 0	Epoch: 22	Train Acc: 0.77925	Test Acc: 0.735	AVG Train loss: 0.675122190952301	AVG Test loss: 0.6963190388679504
Itr: 0	Epoch: 23	Train Acc: 0.78375	Test Acc: 0.77	AVG Train loss: 0.6543169646263123	AVG Test loss: 0.6742945218086243
Itr: 0	Epoch: 24	Train Acc: 0.782875	Test Acc: 0.755	AVG Train loss: 0.6577970957756043	AVG Test loss: 0.7112096714973449
Itr: 0	Epoch: 25	Train Acc: 0.7815625	Test Acc: 0.75	AVG Train loss: 0.6694825315475463	AVG Test loss: 0.7005948352813721
Itr: 0	Epoch: 26	Train Acc: 0.778875	Test Acc: 0.755	AVG Train loss: 0.6695537610054016	AVG Test loss: 0.6757650184631347
Itr: 0	Epoch: 27	Train Acc: 0.770125	Test Acc: 0.74	AVG Train loss: 0.680284550666809	AVG Test loss: 0.7495481944084168
Itr: 0	Epoch: 28	Train Acc: 0.7989375	Test Acc: 0.76	AVG Train loss: 0.6181746518611908	AVG Test loss: 0.6417001438140869
Itr: 0	Epoch: 29	Train Acc: 0.783	Test Acc: 0.79	AVG Train loss: 0.6604404492378235	AVG Test loss: 0.6344466400146485
train set ACC of each class tensor([0.0794, 0.0870, 0.0921, 0.0816, 0.0964, 0.0641, 0.0846, 0.0929, 0.0808,
        0.0936])
[[1270  142    0   20    0    0  115   52    1    0]
 [ 103 1392    0    0    0    0    5   83   17    0]
 [   0   38 1473   67   17    4    0    0    1    0]
 [  17   28   24 1305  150    0   21   19   36    0]
 [   0    0    0   25 1542    0    0    0    0   33]
 [   0    0    0    5    0 1025  106  389   75    0]
 [   1    0    0    0    0   74 1353   77   94    1]
 [   0    0   12    1    0    5    1 1487   89    5]
 [  19    0    0    0    0   72   98  115 1292    4]
 [   6   35    3    0    0    0   18   30   11 1497]]
test set ACC of each class tensor([0.0750, 0.0700, 0.0800, 0.0850, 0.0900, 0.0400, 0.0850, 0.0950, 0.0750,
        0.0950])
[[15  2  0  0  0  0  1  1  1  0]
 [ 4 14  1  0  0  0  0  1  0  0]
 [ 0  1 16  3  0  0  0  0  0  0]
 [ 0  0  0 17  2  0  0  0  1  0]
 [ 0  0  0  1 18  0  0  0  0  1]
 [ 0  0  1  0  0  8  3  5  3  0]
 [ 0  0  0  0  0  0 17  2  1  0]
 [ 0  0  0  0  0  0  0 19  1  0]
 [ 1  0  0  0  0  2  2  0 15  0]
 [ 0  1  0  0  0  0  0  0  0 19]]
